<!DOCTYPE html>
<html ng-app="app1">
  <head>
    <meta charset="utf-8">
    <title></title>
    <!-- <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script> -->
    <script src="bower_components/angular/angular.js"></script>
  </head>
  <body ng-controller="coleccion">

    <p>
      Introduce un Valor y te dira que tipo es:
    </p>
    <input type="text" ng-change="tipoDeDato(dato)" ng-model="dato" placeholder="Ejemplo: 7">

    <div ng-if="result" class="">
      <p>
        El Campo introducido es de tipo: {{result}}
      </p>
    </div>

    <div class="">
      <p>
        Para Agregar una nueva pelicula, este es el formato:
        {"id": 1, "nombre": "Jumanchi", "editor":"Samil Sanchez", "copias": 20}
      </p>
      <input type="text" ng-model="nuevaPelicula" placeholder="Coloca tu json">
      <p>
        Peliculas:
      </p>
      <select class="" ng-model="peliculaSeleccionada" ng-options="x.nombre for x in peliculas" name="">
      </select>
      <input type="button" ng-click="agregarUna(nuevaPelicula)" name="name" value="Añadir">
      <input type="button" ng-click="guardarUna(peliculaSeleccionada)" value="Guardar Una">
      <input type="button" ng-click="guardarTodas()" value="Guardar Todas">
      <input type="button" ng-click="borrarUna(peliculaSeleccionada)" value="Borrar Seleccionada">
      <input type="button" ng-click="recuperarTodas()" value="Recuperar">
    </div>

    <div class="">
      <p>
        Pelicula selecionada: {{peliculaSeleccionada}}
      </p>
      <p>
        Estas son todas las peliculas actuales: {{peliculas}}
      </p>
      <p>
        Estas son las peliculas respaldadas: {{peliculasRespaldadas}}
      </p>
    </div>




    <script type="text/javascript">
      var app = angular.module('app1',[]);

      // Diferentes tipos de variables

      var numero = 15235;
      var string = "Bienvenido al mundo de AngularJs";
      var miFuncion = function(num) {
        return num*num;
      };
      var objeto = {
        id: 1,
        nombre: 'pelota',
        precio: 120
      };
      var noDefinido = undefined;
      var valor = null;
      var array = ["cero","uno","dos","tres"];
      var fecha = new Date();
      var noExiste = '';
      var Json = angular.toJson(objeto, 2);
      var cintas = {
        cinta001 : { id: 1 , color: 'white', metros: 100, gastado: 20 },
        cinta002 : { id: 2 , color: 'red', metros: 500, gastado: 200 },
        cinta003 : { id: 3 , color: 'blue', metros: 600, gastado: 260 },
        cinta004 : { id: 4 , color: 'black', metros: 10, gastado: 2 },
        cinta005 : { id: 5 , color: 'purple', metros: 809, gastado: 9 },
        cinta006 : { id: 6 , color: 'brown', metros: 100, gastado: 0 }
      }
      var personas= [
        {id: 1, nombre: "Samil",      apellido: "Sanchez", id_car: {id:33498, marca: 'Ford'}},
        {id: 2, nombre: "Elizabeth",  apellido: "Pinto", id_car: {id:45454, marca: 'chevrovar'}},
        {id: 3, nombre: "Norelis",    apellido: "Sanchez", id_car: {id: 43434, marca: 'fiat'}}
      ];

      // Formas de verificar los tipos de variable con AngularJs
      console.log('¿ Es un Array ?');
      console.log(angular.isArray(array));
      console.log('¿ Es un Objeto ?');
      console.log(angular.isObject(objeto));
      console.log('¿ Es una fecha?');
      console.log(angular.isDate(fecha));
      console.log('¿ Es un numero ?');
      console.log(angular.isNumber(numero));
      console.log('¿ Es una funcion ?');
      console.log(angular.isFunction(miFuncion));
      console.log('¿ Es un string ?');
      console.log(angular.isString(string));
      console.log('¿ Es un Definido ?');
      console.log(angular.isDefined(noExiste));
      console.log('¿ Es un undefined?');
      console.log(angular.isUndefined(valor));
      console.log('Convertido un Objeto a Json');
      console.log(Json);
      console.log('Convertido un Json a Objeto');
      console.log(angular.fromJson(Json));

      app.controller('coleccion',['$scope', function (scope) {

          // Utilizando la Funcion angular.bind
          var typeData = angular.bind(this, function (valor) {

            if (angular.isDefined(valor)) {
              if (angular.isArray(valor)) {
                return "Es un Array";
              }
              if (angular.isObject(valor)) {
                return "Es un Objeto";
              }
              if (angular.isDate(valor)) {
                return "Es una Fecha";
              }
              if (angular.isString(valor)) {
                if (isNaN(valor)) {
                  return "Es un String";
                }else {
                  return "Es un Numero";
                }
              }
              if (angular.isFunction(valor)) {
                return "Es un Funcion";
              }
              if (angular.isArray(valor)) {
                return "Es un Array";
              }
              if (angular.isUndefined(valor)) {
                return "Es un Objeto";
              }
            }else {
              return "No esta Definido";
            }
          });
          scope.result = false;
          scope.tipoDeDato =  function(dato) {
              scope.result = typeData(dato);
          }

          // funcion angular.copy
          var seleccionarIdPeliculas = angular.bind(this, function (peliculas) {
            var nuevoArray = [];
            // con forEach
            angular.forEach(peliculas, function (value, key) {
              nuevoArray.push(peliculas[key].id)
            });
            // con native for
            /*for (var i = 0; i < peliculas.length; i++) {
              nuevoArray.push(peliculas[i].id)
            }*/
            return nuevoArray;
          });
          scope.peliculas = [
            {id: 142, nombre: "Jumanchi", editor:"Samil Sanchez", copias: 20},
            {id: 2343, nombre: "Jumanchi 2", editor:'Elizabeth Gutierrez', copias: 10},
            {id: 233, nombre: "Jumanchi 3", editor:'Jose Mendez', copias: 5},
          ];
          scope.peliculasIdActual = seleccionarIdPeliculas(scope.peliculas);
          scope.peliculasIdRespaldadas = seleccionarIdPeliculas(scope.peliculasRespaldadas);
          scope.peliculasRespaldadas = [];
          scope.peliculaSeleccionada = [];
          scope.agregarUna = function (pelicula) {
            var objeto = JSON.parse(pelicula); // Conversion de Json a Objeto.
            if (angular.isObject(objeto)) { // ¿ Se convirtio a objeto ?
              var id = objeto.id;
              // Devuelve el index de un array si encuentra el valor sino
              // no lo encuentra retorna -1
              var index = scope.peliculasIdActual.indexOf(id);
              if (index == -1) {
                scope.peliculas.push(objeto); // Agregro una nueva pelicula
                var posicionNueva = (scope.peliculas.length) - 1 ;
                // Agrego el nuevo id de pelicula
                scope.peliculasIdActual.push(scope.peliculas[posicionNueva].id);
              }else {
                alert("Ya existe el id de la pelicula.")
              }
            }else {
                alert("Formato Invalido !Por favor Verificar!")
            }
          }
          scope.guardarUna = function (pelicula) {
            console.log(pelicula);
            //var objeto = JSON.parse(pelicula); // Conversion de Json a Objeto.
            if (angular.isObject(pelicula)) { // ¿ Es un objeto ?
              var id = pelicula.id;
              // Devuelve el index de un array si encuentra el valor sino
              // no lo encuentra retorna -1
              var index = scope.peliculasIdRespaldadas.indexOf(id);
              if (index == -1) {
                scope.peliculasRespaldadas.push(pelicula); // Agrego una nueva pelicula

                var posicionNueva = (scope.peliculasRespaldadas.length) - 1 ;
                // Agrego el nuevo id de pelicula
                scope.peliculasIdRespaldadas.push(scope.peliculasRespaldadas[posicionNueva].id);
              }else {
                alert("Ya se encuentra respaldada la pelicula.")
              }
            }else {
                alert("Formato Invalido !Por favor Verificar!")
            }
          };
          scope.guardarTodas = function () {
            angular.copy(scope.peliculas, scope.peliculasRespaldadas);
          }
          scope.borrarUna = function (pelicula) {
            var id = pelicula.id;
            angular.forEach(scope.peliculas, function (value, key) {
              if (value.id == id) {
                // splice(index,elementos a borrar, elementos a agregar)
                scope.peliculasRespaldadas.splice(key,1);
                scope.peliculasIdRespaldadas.splice(key,1);
              };
            });
          }
          scope.recuperarTodas = function () {
            angular.copy(scope.peliculasRespaldadas, scope.peliculas);
          }
          //angular.copy(scope.peliculas[id])
          // funcion forEach con un objeto
          console.log("Utilizado el forEach de angular con un objeto");
          console.log(angular.toJson(cintas, 4));
          angular.forEach(cintas, function(value, key, obj) {
            console.log("The value:", value);
            console.log("The key:", key);
            console.log("The obj:", obj);
          });
          // funcion forEach con un array
          console.log("Utilizado el forEach de angular con un array");
          angular.forEach(personas, function(value, key, obj) {
            console.log("The value:", value);
            console.log("The key:", key);
            console.log("The obj:", obj);
          });
      }]);
    </script>
  </body>
</html>
